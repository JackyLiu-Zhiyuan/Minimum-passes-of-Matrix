Minimum passes of Matrix

from collections import deque

def minimumPassesOfMatrix(matrix):
    que_one = deque()
    que_two = deque()
    height = len(matrix)
    width = len(matrix[0])
    negative_count = 0
    passes = 0
    for i in range(height):
        for j in range(width):
            if matrix[i][j] > 0:
                que_one.append((i,j))
            if matrix[i][j] < 0:
                negative_count += 1

    while True:
        if (len(que_one) == 0 and len(que_two) == 0):
            if(negative_count != 0):
                return -1
            else:
                break

        while len(que_one):
            current = que_one.popleft()
            new_positives = turnPositive(current,matrix,negative_count)
                for new_positive in new_positives:
                    que_two.append(new_positive)

        while len(que_two):
            current = que_two.popleft()
            new_positives = turnPositive(current,matrix,negative_count)
            for new_positive in new_positives:
                que_one.append(new_positive)
        passes += 1
    
    return passes

def turnPositive(current,matrix,negative_count):
    i,j = current
    list = []
    if matrix[i-1][j] and matrix[i-1][j] > 0:
        list.append((i-1,j))
        negative_count -= 1
    elif matrix[i+1][j] and matrix[i+1][j] > 0:
        list.append((i+1, j))
        negative_count -= 1
    elif matrix[i][j-1] and matrix[i][j-1] > 0:
        list.append((i, j-1))
        negative_count -= 1
    elif matrix[i][j+1] and matrix[i][j+1] > 0:
        list.append((i, j+1))
        negative_count -= 1
    return list


matrix = [[0, -1, -3, 2, 0],[1, -2, -5, -1, -3],[3, 0, 0, -4, -1]]

print(minimumPassesOfMatrix(matrix))




